// <auto-generated />
using System;
using ECommerce_Case_Study.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce_Case_Study.Migrations
{
    [DbContext(typeof(MyAppDbContext))]
    [Migration("20251008192649_Style of Products and Orders")]
    partial class StyleofProductsandOrders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Reading and education",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Apparel and accessories",
                            Name = "Clothing"
                        });
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConfirmPassword = "Password123!",
                            Contact = "555-1111",
                            Email = "alice@example.com",
                            Name = "Alice Johnson",
                            Password = "Password123!"
                        },
                        new
                        {
                            Id = 2,
                            ConfirmPassword = "Password123!",
                            Contact = "555-2222",
                            Email = "bob@example.com",
                            Name = "Bob Smith",
                            Password = "Password123!"
                        },
                        new
                        {
                            Id = 3,
                            ConfirmPassword = "Password123!",
                            Contact = "555-3333",
                            Email = "charlie@example.com",
                            Name = "Charlie Brown",
                            Password = "Password123!"
                        },
                        new
                        {
                            Id = 4,
                            ConfirmPassword = "Password123!",
                            Contact = "555-4444",
                            Email = "diana@example.com",
                            Name = "Diana Prince",
                            Password = "Password123!"
                        });
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.CustomerProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerProfiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St",
                            CustomerId = 1,
                            DateOfBirth = new DateTime(1990, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St",
                            CustomerId = 2,
                            DateOfBirth = new DateTime(1985, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St",
                            CustomerId = 3,
                            DateOfBirth = new DateTime(1992, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfOrder")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            DateOfOrder = new DateTime(2025, 9, 30, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1001,
                            TotalPrice = 948m
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            DateOfOrder = new DateTime(2025, 10, 2, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1002,
                            TotalPrice = 59m
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            DateOfOrder = new DateTime(2025, 10, 6, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1003,
                            TotalPrice = 198m
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 1,
                            DateOfOrder = new DateTime(2025, 10, 4, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            OrderId = 1004,
                            TotalPrice = 1299m
                        });
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Latest smartphone",
                            Name = "Smartphone",
                            Price = 899m,
                            StockQuantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "High performance laptop",
                            Name = "Laptop",
                            Price = 1299m,
                            StockQuantity = 30
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Noise cancelling",
                            Name = "Headphones",
                            Price = 199m,
                            StockQuantity = 80
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Programming guide",
                            Name = "C# in Depth",
                            Price = 49m,
                            StockQuantity = 100
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Best coding practices",
                            Name = "Clean Code",
                            Price = 59m,
                            StockQuantity = 75
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Software architecture",
                            Name = "Design Patterns",
                            Price = 79m,
                            StockQuantity = 60
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Cotton T-shirt",
                            Name = "T-Shirt",
                            Price = 19m,
                            StockQuantity = 200
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Blue denim jeans",
                            Name = "Jeans",
                            Price = 49m,
                            StockQuantity = 150
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Leather jacket",
                            Name = "Jacket",
                            Price = 149m,
                            StockQuantity = 40
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProducts", (string)null);
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.CustomerProfile", b =>
                {
                    b.HasOne("ECommerce_Case_Study.Data.Models.Customer", "Customer")
                        .WithOne("CustomerProfile")
                        .HasForeignKey("ECommerce_Case_Study.Data.Models.CustomerProfile", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Order", b =>
                {
                    b.HasOne("ECommerce_Case_Study.Data.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Product", b =>
                {
                    b.HasOne("ECommerce_Case_Study.Data.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("ECommerce_Case_Study.Data.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ECommerce_Case_Study.Data.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce_Case_Study.Data.Models.Customer", b =>
                {
                    b.Navigation("CustomerProfile");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
